OVERVIEW

Jabba is a job control system that sits on top of Gridware and runJob.
Jabba works on a batch of jobs which can potentially be larger than
Gridware can accept all at once.  Jabba will retry a failed job three
times before giving up.  (You can set the retry count to be higher or 
lower).  Jabba also detects hung jobs and eventually kills them.

JOB SPECIFICATIONS

To run Jabba you first need to create a job specification file.
This is quite straightforward.  A job spec file can be just a 
list of commands.  For instance the following two lines would be a 
valid job spec:
    echo hello boss
    ls -l
Job specs can have build in checks on either the input or the output.
The overall format for a check is:
   {check in|out exists|exists+|line|line+ fileName}
this will be replaced by simply fileName when the job is run.
Checks "in" are used to make sure that input files are correct.
Checks "out" are used to make sure that output files are correct.
There are four types of checks:
   exists - file must exist
   exists+ - file must exist and be non-empty
   line - file must end with a complete line
   line+ - file must end with a complete line and be non-empty
Here's an example of a blat job spec:
  blat {check in line+ human.fa} {check in line+ mouse1.fa} {check out line+ hm1.psl}
  blat {check in line+ human.fa} {check in line+ mouse2.fa} {check out line+ hm2.psl}

PUSHING ALONG A BATCH OF JOBS

Once you have a job spec use the jabba make command as so:
   jabba make job.hut job.spec
This will create a database, job.hut, to track the job.  All the
check ins will be performed at this stage.  No jobs will be submitted
to the cluster yet though.

To submit jobs do
   jabba push job.hut
This first sees how many jobs are already in the Gridware queue.  It will submit
jobs until the queue reaches 10000 or the batch is all submitted.   

You may want to use
   jabba try batch.hut
rather than jaba push the first time.  This only puts 10 jobs on the queue.
A try followed 10 minutes later by a push will often keep you from wasting
cluster time on a bad batch of jobs.

To check on jobs do
   jabba check job.hut
This will list job status including jobs that have taken longer than 3 days,
jobs that have hung (taken longer than 14 days and hence been killed) and
hopefully jobs that have succeeded as well.   If you have failed jobs or
jobs not yet submitted do another jabba push to submit more and retry.

If some jobs do fail and or hang you can get a list of them with
   jabba crashed job.hut
or
   jabba hung job.hut
or (for both hung and crashed jobs)
   jabba failed job.hut
This will both return lists in the job spec format, to make it easy
to rerun the failed jobs after you've fixed the underlying problem.
Jobs that either return non-zero or fail an output check are considered
to have crashed.

On occassion you may want to stop a batch.  Do this with
    jabba stop job.hut
you can restart stopped batches with a push, though they end up counting 
against your retry count currently.

CONCLUSION

Jabba is not fully automated, requiring you to 'push' jobs along
periodically.   The pushing is quite easy though,  and you could certainly
make a shell script that pushed, slept a few hours, pushed again and
so forth.   Given the current state of the cluster and the software and
data we run on it though, it's not a bad idea at all to check on a batch
of jobs every now and again so that you can notify the admins when there's a 
cluster problem, and fix your program when there's a program problem.

Please let me know of features requests and bugs.
	-Jim

