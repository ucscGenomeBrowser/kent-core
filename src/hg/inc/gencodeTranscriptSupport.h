/* gencodeTranscriptSupport.h was originally generated by the autoSql program, which also 
 * generated gencodeTranscriptSupport.c and gencodeTranscriptSupport.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef GENCODETRANSCRIPTSUPPORT_H
#define GENCODETRANSCRIPTSUPPORT_H

#define GENCODETRANSCRIPTSUPPORT_NUM_COLS 3

extern char *gencodeTranscriptSupportCommaSepFieldNames;

struct gencodeTranscriptSupport
/* GENCODE transcript support from other datasets */
    {
    struct gencodeTranscriptSupport *next;  /* Next in singly linked list. */
    char *transcriptId;	/* GENCODE transcript identifier */
    char *seqId;	/* Identifier of sequence supporting transcript */
    char *seqSrc;	/* Source of supporting sequence */
    };

void gencodeTranscriptSupportStaticLoad(char **row, struct gencodeTranscriptSupport *ret);
/* Load a row from gencodeTranscriptSupport table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct gencodeTranscriptSupport *gencodeTranscriptSupportLoad(char **row);
/* Load a gencodeTranscriptSupport from row fetched with select * from gencodeTranscriptSupport
 * from database.  Dispose of this with gencodeTranscriptSupportFree(). */

struct gencodeTranscriptSupport *gencodeTranscriptSupportLoadAll(char *fileName);
/* Load all gencodeTranscriptSupport from whitespace-separated file.
 * Dispose of this with gencodeTranscriptSupportFreeList(). */

struct gencodeTranscriptSupport *gencodeTranscriptSupportLoadAllByChar(char *fileName, char chopper);
/* Load all gencodeTranscriptSupport from chopper separated file.
 * Dispose of this with gencodeTranscriptSupportFreeList(). */

#define gencodeTranscriptSupportLoadAllByTab(a) gencodeTranscriptSupportLoadAllByChar(a, '\t');
/* Load all gencodeTranscriptSupport from tab separated file.
 * Dispose of this with gencodeTranscriptSupportFreeList(). */

struct gencodeTranscriptSupport *gencodeTranscriptSupportCommaIn(char **pS, struct gencodeTranscriptSupport *ret);
/* Create a gencodeTranscriptSupport out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new gencodeTranscriptSupport */

void gencodeTranscriptSupportFree(struct gencodeTranscriptSupport **pEl);
/* Free a single dynamically allocated gencodeTranscriptSupport such as created
 * with gencodeTranscriptSupportLoad(). */

void gencodeTranscriptSupportFreeList(struct gencodeTranscriptSupport **pList);
/* Free a list of dynamically allocated gencodeTranscriptSupport's */

void gencodeTranscriptSupportOutput(struct gencodeTranscriptSupport *el, FILE *f, char sep, char lastSep);
/* Print out gencodeTranscriptSupport.  Separate fields with sep. Follow last field with lastSep. */

#define gencodeTranscriptSupportTabOut(el,f) gencodeTranscriptSupportOutput(el,f,'\t','\n');
/* Print out gencodeTranscriptSupport as a line in a tab-separated file. */

#define gencodeTranscriptSupportCommaOut(el,f) gencodeTranscriptSupportOutput(el,f,',',',');
/* Print out gencodeTranscriptSupport as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* GENCODETRANSCRIPTSUPPORT_H */

