/* gencodeGeneSource.h was originally generated by the autoSql program, which also 
 * generated gencodeGeneSource.c and gencodeGeneSource.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef GENCODEGENESOURCE_H
#define GENCODEGENESOURCE_H

#define GENCODEGENESOURCE_NUM_COLS 2

extern char *gencodeGeneSourceCommaSepFieldNames;

struct gencodeGeneSource
/* The source of Gencode gene annotation */
    {
    struct gencodeGeneSource *next;  /* Next in singly linked list. */
    char *geneId;	/* GENCODE gene identifier */
    char *source;	/* Source of gene */
    };

void gencodeGeneSourceStaticLoad(char **row, struct gencodeGeneSource *ret);
/* Load a row from gencodeGeneSource table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct gencodeGeneSource *gencodeGeneSourceLoad(char **row);
/* Load a gencodeGeneSource from row fetched with select * from gencodeGeneSource
 * from database.  Dispose of this with gencodeGeneSourceFree(). */

struct gencodeGeneSource *gencodeGeneSourceLoadAll(char *fileName);
/* Load all gencodeGeneSource from whitespace-separated file.
 * Dispose of this with gencodeGeneSourceFreeList(). */

struct gencodeGeneSource *gencodeGeneSourceLoadAllByChar(char *fileName, char chopper);
/* Load all gencodeGeneSource from chopper separated file.
 * Dispose of this with gencodeGeneSourceFreeList(). */

#define gencodeGeneSourceLoadAllByTab(a) gencodeGeneSourceLoadAllByChar(a, '\t');
/* Load all gencodeGeneSource from tab separated file.
 * Dispose of this with gencodeGeneSourceFreeList(). */

struct gencodeGeneSource *gencodeGeneSourceCommaIn(char **pS, struct gencodeGeneSource *ret);
/* Create a gencodeGeneSource out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new gencodeGeneSource */

void gencodeGeneSourceFree(struct gencodeGeneSource **pEl);
/* Free a single dynamically allocated gencodeGeneSource such as created
 * with gencodeGeneSourceLoad(). */

void gencodeGeneSourceFreeList(struct gencodeGeneSource **pList);
/* Free a list of dynamically allocated gencodeGeneSource's */

void gencodeGeneSourceOutput(struct gencodeGeneSource *el, FILE *f, char sep, char lastSep);
/* Print out gencodeGeneSource.  Separate fields with sep. Follow last field with lastSep. */

#define gencodeGeneSourceTabOut(el,f) gencodeGeneSourceOutput(el,f,'\t','\n');
/* Print out gencodeGeneSource as a line in a tab-separated file. */

#define gencodeGeneSourceCommaOut(el,f) gencodeGeneSourceOutput(el,f,',',',');
/* Print out gencodeGeneSource as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* GENCODEGENESOURCE_H */

