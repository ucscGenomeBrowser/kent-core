/* gencodeToEntrezGene.h was originally generated by the autoSql program, which also 
 * generated gencodeToEntrezGene.c and gencodeToEntrezGene.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef GENCODETOENTREZGENE_H
#define GENCODETOENTREZGENE_H

#define GENCODETOENTREZGENE_NUM_COLS 2

extern char *gencodeToEntrezGeneCommaSepFieldNames;

struct gencodeToEntrezGene
/* The NCBI Entrez gene id associated with GENCODE transcript annotation */
    {
    struct gencodeToEntrezGene *next;  /* Next in singly linked list. */
    char *transcriptId;	/* GENCODE transcript identifier */
    int entrezGeneId;	/* Entrez gene id */
    };

void gencodeToEntrezGeneStaticLoad(char **row, struct gencodeToEntrezGene *ret);
/* Load a row from gencodeToEntrezGene table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct gencodeToEntrezGene *gencodeToEntrezGeneLoad(char **row);
/* Load a gencodeToEntrezGene from row fetched with select * from gencodeToEntrezGene
 * from database.  Dispose of this with gencodeToEntrezGeneFree(). */

struct gencodeToEntrezGene *gencodeToEntrezGeneLoadAll(char *fileName);
/* Load all gencodeToEntrezGene from whitespace-separated file.
 * Dispose of this with gencodeToEntrezGeneFreeList(). */

struct gencodeToEntrezGene *gencodeToEntrezGeneLoadAllByChar(char *fileName, char chopper);
/* Load all gencodeToEntrezGene from chopper separated file.
 * Dispose of this with gencodeToEntrezGeneFreeList(). */

#define gencodeToEntrezGeneLoadAllByTab(a) gencodeToEntrezGeneLoadAllByChar(a, '\t');
/* Load all gencodeToEntrezGene from tab separated file.
 * Dispose of this with gencodeToEntrezGeneFreeList(). */

struct gencodeToEntrezGene *gencodeToEntrezGeneCommaIn(char **pS, struct gencodeToEntrezGene *ret);
/* Create a gencodeToEntrezGene out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new gencodeToEntrezGene */

void gencodeToEntrezGeneFree(struct gencodeToEntrezGene **pEl);
/* Free a single dynamically allocated gencodeToEntrezGene such as created
 * with gencodeToEntrezGeneLoad(). */

void gencodeToEntrezGeneFreeList(struct gencodeToEntrezGene **pList);
/* Free a list of dynamically allocated gencodeToEntrezGene's */

void gencodeToEntrezGeneOutput(struct gencodeToEntrezGene *el, FILE *f, char sep, char lastSep);
/* Print out gencodeToEntrezGene.  Separate fields with sep. Follow last field with lastSep. */

#define gencodeToEntrezGeneTabOut(el,f) gencodeToEntrezGeneOutput(el,f,'\t','\n');
/* Print out gencodeToEntrezGene as a line in a tab-separated file. */

#define gencodeToEntrezGeneCommaOut(el,f) gencodeToEntrezGeneOutput(el,f,',',',');
/* Print out gencodeToEntrezGene as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* GENCODETOENTREZGENE_H */

