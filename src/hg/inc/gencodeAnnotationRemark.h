/* gencodeAnnotationRemark.h was originally generated by the autoSql program, which also 
 * generated gencodeAnnotationRemark.c and gencodeAnnotationRemark.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef GENCODEANNOTATIONREMARK_H
#define GENCODEANNOTATIONREMARK_H

#define GENCODEANNOTATIONREMARK_NUM_COLS 2

extern char *gencodeAnnotationRemarkCommaSepFieldNames;

struct gencodeAnnotationRemark
/* Annotation remarks */
    {
    struct gencodeAnnotationRemark *next;  /* Next in singly linked list. */
    char *transcriptId;	/* GENCODE transcript identifier */
    char *remark;	/* Comment by annotator */
    };

void gencodeAnnotationRemarkStaticLoad(char **row, struct gencodeAnnotationRemark *ret);
/* Load a row from gencodeAnnotationRemark table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct gencodeAnnotationRemark *gencodeAnnotationRemarkLoad(char **row);
/* Load a gencodeAnnotationRemark from row fetched with select * from gencodeAnnotationRemark
 * from database.  Dispose of this with gencodeAnnotationRemarkFree(). */

struct gencodeAnnotationRemark *gencodeAnnotationRemarkLoadAll(char *fileName);
/* Load all gencodeAnnotationRemark from whitespace-separated file.
 * Dispose of this with gencodeAnnotationRemarkFreeList(). */

struct gencodeAnnotationRemark *gencodeAnnotationRemarkLoadAllByChar(char *fileName, char chopper);
/* Load all gencodeAnnotationRemark from chopper separated file.
 * Dispose of this with gencodeAnnotationRemarkFreeList(). */

#define gencodeAnnotationRemarkLoadAllByTab(a) gencodeAnnotationRemarkLoadAllByChar(a, '\t');
/* Load all gencodeAnnotationRemark from tab separated file.
 * Dispose of this with gencodeAnnotationRemarkFreeList(). */

struct gencodeAnnotationRemark *gencodeAnnotationRemarkCommaIn(char **pS, struct gencodeAnnotationRemark *ret);
/* Create a gencodeAnnotationRemark out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new gencodeAnnotationRemark */

void gencodeAnnotationRemarkFree(struct gencodeAnnotationRemark **pEl);
/* Free a single dynamically allocated gencodeAnnotationRemark such as created
 * with gencodeAnnotationRemarkLoad(). */

void gencodeAnnotationRemarkFreeList(struct gencodeAnnotationRemark **pList);
/* Free a list of dynamically allocated gencodeAnnotationRemark's */

void gencodeAnnotationRemarkOutput(struct gencodeAnnotationRemark *el, FILE *f, char sep, char lastSep);
/* Print out gencodeAnnotationRemark.  Separate fields with sep. Follow last field with lastSep. */

#define gencodeAnnotationRemarkTabOut(el,f) gencodeAnnotationRemarkOutput(el,f,'\t','\n');
/* Print out gencodeAnnotationRemark as a line in a tab-separated file. */

#define gencodeAnnotationRemarkCommaOut(el,f) gencodeAnnotationRemarkOutput(el,f,',',',');
/* Print out gencodeAnnotationRemark as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* GENCODEANNOTATIONREMARK_H */

