/* gencodeTranscriptSource.h was originally generated by the autoSql program, which also 
 * generated gencodeTranscriptSource.c and gencodeTranscriptSource.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef GENCODETRANSCRIPTSOURCE_H
#define GENCODETRANSCRIPTSOURCE_H

#define GENCODETRANSCRIPTSOURCE_NUM_COLS 2

extern char *gencodeTranscriptSourceCommaSepFieldNames;

struct gencodeTranscriptSource
/* The source of Gencode transcript annotation */
    {
    struct gencodeTranscriptSource *next;  /* Next in singly linked list. */
    char *transcriptId;	/* GENCODE transcript identifier */
    char *source;	/* Source of transcript */
    };

void gencodeTranscriptSourceStaticLoad(char **row, struct gencodeTranscriptSource *ret);
/* Load a row from gencodeTranscriptSource table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct gencodeTranscriptSource *gencodeTranscriptSourceLoad(char **row);
/* Load a gencodeTranscriptSource from row fetched with select * from gencodeTranscriptSource
 * from database.  Dispose of this with gencodeTranscriptSourceFree(). */

struct gencodeTranscriptSource *gencodeTranscriptSourceLoadAll(char *fileName);
/* Load all gencodeTranscriptSource from whitespace-separated file.
 * Dispose of this with gencodeTranscriptSourceFreeList(). */

struct gencodeTranscriptSource *gencodeTranscriptSourceLoadAllByChar(char *fileName, char chopper);
/* Load all gencodeTranscriptSource from chopper separated file.
 * Dispose of this with gencodeTranscriptSourceFreeList(). */

#define gencodeTranscriptSourceLoadAllByTab(a) gencodeTranscriptSourceLoadAllByChar(a, '\t');
/* Load all gencodeTranscriptSource from tab separated file.
 * Dispose of this with gencodeTranscriptSourceFreeList(). */

struct gencodeTranscriptSource *gencodeTranscriptSourceCommaIn(char **pS, struct gencodeTranscriptSource *ret);
/* Create a gencodeTranscriptSource out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new gencodeTranscriptSource */

void gencodeTranscriptSourceFree(struct gencodeTranscriptSource **pEl);
/* Free a single dynamically allocated gencodeTranscriptSource such as created
 * with gencodeTranscriptSourceLoad(). */

void gencodeTranscriptSourceFreeList(struct gencodeTranscriptSource **pList);
/* Free a list of dynamically allocated gencodeTranscriptSource's */

void gencodeTranscriptSourceOutput(struct gencodeTranscriptSource *el, FILE *f, char sep, char lastSep);
/* Print out gencodeTranscriptSource.  Separate fields with sep. Follow last field with lastSep. */

#define gencodeTranscriptSourceTabOut(el,f) gencodeTranscriptSourceOutput(el,f,'\t','\n');
/* Print out gencodeTranscriptSource as a line in a tab-separated file. */

#define gencodeTranscriptSourceCommaOut(el,f) gencodeTranscriptSourceOutput(el,f,',',',');
/* Print out gencodeTranscriptSource as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* GENCODETRANSCRIPTSOURCE_H */

