/* gencodeTranscriptionSupportLevel.h was originally generated by the autoSql program, which also 
 * generated gencodeTranscriptionSupportLevel.c and gencodeTranscriptionSupportLevel.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef GENCODETRANSCRIPTIONSUPPORTLEVEL_H
#define GENCODETRANSCRIPTIONSUPPORTLEVEL_H

#define GENCODETRANSCRIPTIONSUPPORTLEVEL_NUM_COLS 2

extern char *gencodeTranscriptionSupportLevelCommaSepFieldNames;

struct gencodeTranscriptionSupportLevel
/* GENCODE transcription support level, computed from primary data */
    {
    struct gencodeTranscriptionSupportLevel *next;  /* Next in singly linked list. */
    char *transcriptId;	/* GENCODE transcript identifier */
    char *level;	/* support level, tsl1 is strongest support, tsl5 weakest, NA means not analyzed */
    };

void gencodeTranscriptionSupportLevelStaticLoad(char **row, struct gencodeTranscriptionSupportLevel *ret);
/* Load a row from gencodeTranscriptionSupportLevel table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct gencodeTranscriptionSupportLevel *gencodeTranscriptionSupportLevelLoad(char **row);
/* Load a gencodeTranscriptionSupportLevel from row fetched with select * from gencodeTranscriptionSupportLevel
 * from database.  Dispose of this with gencodeTranscriptionSupportLevelFree(). */

struct gencodeTranscriptionSupportLevel *gencodeTranscriptionSupportLevelLoadAll(char *fileName);
/* Load all gencodeTranscriptionSupportLevel from whitespace-separated file.
 * Dispose of this with gencodeTranscriptionSupportLevelFreeList(). */

struct gencodeTranscriptionSupportLevel *gencodeTranscriptionSupportLevelLoadAllByChar(char *fileName, char chopper);
/* Load all gencodeTranscriptionSupportLevel from chopper separated file.
 * Dispose of this with gencodeTranscriptionSupportLevelFreeList(). */

#define gencodeTranscriptionSupportLevelLoadAllByTab(a) gencodeTranscriptionSupportLevelLoadAllByChar(a, '\t');
/* Load all gencodeTranscriptionSupportLevel from tab separated file.
 * Dispose of this with gencodeTranscriptionSupportLevelFreeList(). */

struct gencodeTranscriptionSupportLevel *gencodeTranscriptionSupportLevelCommaIn(char **pS, struct gencodeTranscriptionSupportLevel *ret);
/* Create a gencodeTranscriptionSupportLevel out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new gencodeTranscriptionSupportLevel */

void gencodeTranscriptionSupportLevelFree(struct gencodeTranscriptionSupportLevel **pEl);
/* Free a single dynamically allocated gencodeTranscriptionSupportLevel such as created
 * with gencodeTranscriptionSupportLevelLoad(). */

void gencodeTranscriptionSupportLevelFreeList(struct gencodeTranscriptionSupportLevel **pList);
/* Free a list of dynamically allocated gencodeTranscriptionSupportLevel's */

void gencodeTranscriptionSupportLevelOutput(struct gencodeTranscriptionSupportLevel *el, FILE *f, char sep, char lastSep);
/* Print out gencodeTranscriptionSupportLevel.  Separate fields with sep. Follow last field with lastSep. */

#define gencodeTranscriptionSupportLevelTabOut(el,f) gencodeTranscriptionSupportLevelOutput(el,f,'\t','\n');
/* Print out gencodeTranscriptionSupportLevel as a line in a tab-separated file. */

#define gencodeTranscriptionSupportLevelCommaOut(el,f) gencodeTranscriptionSupportLevelOutput(el,f,',',',');
/* Print out gencodeTranscriptionSupportLevel as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* GENCODETRANSCRIPTIONSUPPORTLEVEL_H */

