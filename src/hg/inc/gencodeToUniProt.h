/* gencodeToUniProt.h was originally generated by the autoSql program, which also 
 * generated gencodeToUniProt.c and gencodeToUniProt.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef GENCODETOUNIPROT_H
#define GENCODETOUNIPROT_H

#define GENCODETOUNIPROT_NUM_COLS 4

extern char *gencodeToUniProtCommaSepFieldNames;

enum gencodeToUniProtDataset
    {
    gencodeToUniProtSwissProt = 0,
    gencodeToUniProtTrEMBL = 1,
    };
struct gencodeToUniProt
/* GENCODE transcript to UniProt peptide mapping */
    {
    struct gencodeToUniProt *next;  /* Next in singly linked list. */
    char *transcriptId;	/* GENCODE transcript identifier */
    char *acc;	/* UniProt/Swiss-Prot accession */
    char *name;	/* UniProt/Swiss-Prot entry name */
    enum gencodeToUniProtDataset dataset;	/* UniProt dataset */
    };

void gencodeToUniProtStaticLoad(char **row, struct gencodeToUniProt *ret);
/* Load a row from gencodeToUniProt table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct gencodeToUniProt *gencodeToUniProtLoad(char **row);
/* Load a gencodeToUniProt from row fetched with select * from gencodeToUniProt
 * from database.  Dispose of this with gencodeToUniProtFree(). */

struct gencodeToUniProt *gencodeToUniProtLoadAll(char *fileName);
/* Load all gencodeToUniProt from whitespace-separated file.
 * Dispose of this with gencodeToUniProtFreeList(). */

struct gencodeToUniProt *gencodeToUniProtLoadAllByChar(char *fileName, char chopper);
/* Load all gencodeToUniProt from chopper separated file.
 * Dispose of this with gencodeToUniProtFreeList(). */

#define gencodeToUniProtLoadAllByTab(a) gencodeToUniProtLoadAllByChar(a, '\t');
/* Load all gencodeToUniProt from tab separated file.
 * Dispose of this with gencodeToUniProtFreeList(). */

struct gencodeToUniProt *gencodeToUniProtCommaIn(char **pS, struct gencodeToUniProt *ret);
/* Create a gencodeToUniProt out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new gencodeToUniProt */

void gencodeToUniProtFree(struct gencodeToUniProt **pEl);
/* Free a single dynamically allocated gencodeToUniProt such as created
 * with gencodeToUniProtLoad(). */

void gencodeToUniProtFreeList(struct gencodeToUniProt **pList);
/* Free a list of dynamically allocated gencodeToUniProt's */

void gencodeToUniProtOutput(struct gencodeToUniProt *el, FILE *f, char sep, char lastSep);
/* Print out gencodeToUniProt.  Separate fields with sep. Follow last field with lastSep. */

#define gencodeToUniProtTabOut(el,f) gencodeToUniProtOutput(el,f,'\t','\n');
/* Print out gencodeToUniProt as a line in a tab-separated file. */

#define gencodeToUniProtCommaOut(el,f) gencodeToUniProtOutput(el,f,',',',');
/* Print out gencodeToUniProt as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* GENCODETOUNIPROT_H */

