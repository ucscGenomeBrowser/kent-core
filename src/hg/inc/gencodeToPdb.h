/* gencodeToPdb.h was originally generated by the autoSql program, which also 
 * generated gencodeToPdb.c and gencodeToPdb.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef GENCODETOPDB_H
#define GENCODETOPDB_H

#define GENCODETOPDB_NUM_COLS 2

extern char *gencodeToPdbCommaSepFieldNames;

struct gencodeToPdb
/* GENCODE transcript to Protein Data Bank (PDB) protein structure mapping */
    {
    struct gencodeToPdb *next;  /* Next in singly linked list. */
    char *transcriptId;	/* GENCODE transcript identifier */
    char *pdbId;	/* Protein Data Bank (PDB) identifier */
    };

void gencodeToPdbStaticLoad(char **row, struct gencodeToPdb *ret);
/* Load a row from gencodeToPdb table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct gencodeToPdb *gencodeToPdbLoad(char **row);
/* Load a gencodeToPdb from row fetched with select * from gencodeToPdb
 * from database.  Dispose of this with gencodeToPdbFree(). */

struct gencodeToPdb *gencodeToPdbLoadAll(char *fileName);
/* Load all gencodeToPdb from whitespace-separated file.
 * Dispose of this with gencodeToPdbFreeList(). */

struct gencodeToPdb *gencodeToPdbLoadAllByChar(char *fileName, char chopper);
/* Load all gencodeToPdb from chopper separated file.
 * Dispose of this with gencodeToPdbFreeList(). */

#define gencodeToPdbLoadAllByTab(a) gencodeToPdbLoadAllByChar(a, '\t');
/* Load all gencodeToPdb from tab separated file.
 * Dispose of this with gencodeToPdbFreeList(). */

struct gencodeToPdb *gencodeToPdbCommaIn(char **pS, struct gencodeToPdb *ret);
/* Create a gencodeToPdb out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new gencodeToPdb */

void gencodeToPdbFree(struct gencodeToPdb **pEl);
/* Free a single dynamically allocated gencodeToPdb such as created
 * with gencodeToPdbLoad(). */

void gencodeToPdbFreeList(struct gencodeToPdb **pList);
/* Free a list of dynamically allocated gencodeToPdb's */

void gencodeToPdbOutput(struct gencodeToPdb *el, FILE *f, char sep, char lastSep);
/* Print out gencodeToPdb.  Separate fields with sep. Follow last field with lastSep. */

#define gencodeToPdbTabOut(el,f) gencodeToPdbOutput(el,f,'\t','\n');
/* Print out gencodeToPdb as a line in a tab-separated file. */

#define gencodeToPdbCommaOut(el,f) gencodeToPdbOutput(el,f,',',',');
/* Print out gencodeToPdb as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* GENCODETOPDB_H */

