# patch to add new subseq support to dnaseq, nibs and twoBit.  Implementation
# delayed until blat can be worked on
Index: inc/dnaseq.h
===================================================================
RCS file: /projects/compbio/cvsroot/kent/src/inc/dnaseq.h,v
retrieving revision 1.10
diff -u -r1.10 dnaseq.h
--- inc/dnaseq.h	8 Sep 2003 17:53:11 -0000	1.10
+++ inc/dnaseq.h	23 May 2004 18:08:41 -0000
@@ -22,6 +22,8 @@
     DNA *dna;             /* Sequence base by base. */
     int size;             /* Size of sequence. */
     Bits* mask;           /* Repeat mask (optional) */
+    int srcOff;           /* offset in source sequence if a subsequence */
+    int srcSize;          /* size of src sequence */
     };
 
 typedef struct dnaSeq bioSeq;	/* Preferred use if either DNA or protein. */
Index: inc/nib.h
===================================================================
RCS file: /projects/compbio/cvsroot/kent/src/inc/nib.h,v
retrieving revision 1.11
diff -u -r1.11 nib.h
--- inc/nib.h	29 Feb 2004 00:23:11 -0000	1.11
+++ inc/nib.h	23 May 2004 18:11:21 -0000
@@ -49,11 +49,8 @@
 /* Load part of a .nib file, with control over handling of masked
  * positions. Subranges of nib files may specified in the file name
  * using the syntax:
- *    /path/file.nib:seqid:start-end
- * or\n"
  *    /path/file.nib:start-end
- * With the first form, seqid becomes the id of the subrange, with the second
- * form, a sequence id of file:start-end will be used.
+ * This will load only the specified range and set the srcOff field to start.
  */
 
 void nibWrite(struct dnaSeq *seq, char *fileName);
Index: lib/dnaseq.c
===================================================================
RCS file: /projects/compbio/cvsroot/kent/src/lib/dnaseq.c,v
retrieving revision 1.15
diff -u -r1.15 dnaseq.c
--- lib/dnaseq.c	5 Apr 2004 21:16:44 -0000	1.15
+++ lib/dnaseq.c	23 May 2004 18:10:02 -0000
@@ -21,6 +21,7 @@
 seq->dna = dna;
 seq->size = size;
 seq->mask = NULL;
+seq->srcSize = seq->size;
 return seq;
 }
 
@@ -116,6 +117,7 @@
 assert(actualSize <= inSize/3+1);
 seq->size = actualSize;
 seq->name = cloneString(inSeq->name);
+seq->srcSize = seq->size;
 return seq;
 }
 
Index: lib/nib.c
===================================================================
RCS file: /projects/compbio/cvsroot/kent/src/lib/nib.c,v
retrieving revision 1.17
diff -u -r1.17 nib.c
--- lib/nib.c	29 Feb 2004 00:23:14 -0000	1.17
+++ lib/nib.c	23 May 2004 18:19:52 -0000
@@ -21,24 +21,11 @@
 return strchr(baseName, ':');
 }
 
-static void parseSubrange(char *subrange, char *name, int *start, int *end)
-/* parse the subrange specification */
+static void parseSubrange(char *subrange, int *start, int *end)
+/* parse a subrange specification */
 {
-char *rangePart = strchr(subrange+1, ':');
-if (rangePart != NULL)
-    {
-    /* :seqId:start-end form */
-    *rangePart = '\0';
-    strcpy(name, subrange+1);
-    *rangePart = ':';
-    rangePart++;
-    }
-else
-    {
-    /* :start-end form */
-    rangePart = subrange+1;
-    strcpy(name, ""); 
-    }
+/* :start-end */
+char *rangePart = subrange+1;
 if ((sscanf(rangePart, "%u-%u", start, end) != 2) || (*start > *end))
     errAbort("can't parse nib file subsequence specification: %s",
              subrange);
@@ -54,30 +41,21 @@
 char *subrange = findNibSubrange(fileSpec);
 if (subrange != NULL)
     {
+    parseSubrange(subrange, start, end);
     *subrange = '\0';
-    parseSubrange(subrange, name, start, end);
     strcpy(filePath, fileSpec);
     *subrange = ':';
-    if (strlen(name) == 0)
-        {
-        /* no name in spec, generate one */
-        if (options & NIB_BASE_NAME)
-            splitPath(filePath, NULL, name, NULL);
-        else
-            strcpy(name, filePath);
-        sprintf(name+strlen(name), ":%u-%u", *start, *end);
-        }
     }
 else
     {
     *start = 0;
     *end = 0;
     strcpy(filePath, fileSpec);
-    if (options & NIB_BASE_NAME)
-        splitPath(fileSpec, NULL, name, NULL);
-    else
-        strcpy(name, fileSpec);
     }
+if (options & NIB_BASE_NAME)
+    splitPath(filePath, NULL, name, NULL);
+else
+    strcpy(name, filePath);
 }
 
 void nibOpenVerify(char *fileName, FILE **retFile, int *retSize)
@@ -124,6 +102,8 @@
 
 AllocVar(seq);
 seq->size = size;
+seq->srcOff = start;
+seq->srcSize = seqSize;
 seq->name = cloneString(seqName);
 seq->dna = d = needLargeMem(size+1);
 if (options & NIB_MASK_MIXED)
@@ -273,11 +253,8 @@
 /* Load part of a .nib file, with control over handling of masked
  * positions. Subranges of nib files may specified in the file name
  * using the syntax:
- *    /path/file.nib:seqid:start-end
- * or\n"
  *    /path/file.nib:start-end
- * With the first form, seqid becomes the id of the subrange, with the second
- * form, a sequence id of file:start-end will be used.
+ * This will load only the specified range and set the srcOff field to start.
  */
 {
 struct dnaSeq *seq;
@@ -306,13 +283,13 @@
 /* Write out file in format of four bits per nucleotide, with control over
  * handling of masked positions. */
 {
-    nibOutput(options, seq, fileName);
+nibOutput(options, seq, fileName);
 }
 
 void nibWrite(struct dnaSeq *seq, char *fileName)
 /* Write out file in format of four bits per nucleotide. */
 {
-    nibWriteMasked(0, seq, fileName);
+nibWriteMasked(0, seq, fileName);
 }
 
 struct nibStream
Index: lib/twoBit.c
===================================================================
RCS file: /projects/compbio/cvsroot/kent/src/lib/twoBit.c,v
retrieving revision 1.6
diff -u -r1.6 twoBit.c
--- lib/twoBit.c	25 Feb 2004 07:42:31 -0000	1.6
+++ lib/twoBit.c	23 May 2004 19:36:52 -0000
@@ -433,15 +433,10 @@
 
 /* Allocate dnaSeq, and fill in zero tag at end of sequence. */
 AllocVar(seq);
-if (outSize == seqSize)
-    seq->name = cloneString(name);
-else
-    {
-    char buf[256*2];
-    safef(buf, sizeof(buf), "%s:%d-%d", name, fragStart, fragEnd);
-    seq->name = cloneString(buf);
-    }
+seq->name = cloneString(name);
 seq->size = outSize;
+seq->srcOff = fragStart;
+seq->srcSize = seqSize;
 dna = seq->dna = needLargeMem(outSize+1);
 seq->dna[outSize] = 0;
 
