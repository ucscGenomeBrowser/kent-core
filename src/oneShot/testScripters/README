Some test programs written in the different langauges
to get an idea of the tradeoffs between languages.

helloWorld - Print 'hello world'  (Just to see startup overhead)
       C                0.000u 0.000s 0:00.00 0.0%   
       Python           0.010u 0.010s 0:00.06 33.3%
       Perl             0.010u 0.000s 0:00.00 0.0% 

countLines - Just count number of lines in a file
    countLines on chr22.fa (991096 lines 50545812 chars)
       C lf	(1st): 	0.650u 0.720s 0:03.52 38.9% 
       C lf	(2nd): 	0.190u 0.130s 0:00.32 100.0% 
       C fgets:   	0.550u 0.120s 0:00.66 101.5%
       Python:   	2.190u 0.140s 0:02.53 90.9%
       Python/psycho:   1.160u 0.110s 0:01.30 97.6%
       awk:      	1.000u 0.170s 0:01.17 100.0% 
       Perl:     	1.490u 0.100s 0:01.51 100.0% 
    (Where C lf is using the lineFile module and C fgets is using fgets)
    (The 1st run is before the file is cached, all others are after file cached)


    File line counts:
       countLines.c (lf)	34
       cl.c (fgets)		34
       countLines.py 		23
       countLines.perl 		25
       countLines.awk	 	9 (Note, not using subroutines like rest)


wordUse - Count up number of time each space-delimited word used, print top 10.
    wordUse on Adventures of Sherlock Holms (590093 characters)
       C (1st):	0.100u 0.020s 0:00.12 100.0% 
       C (2nd):	0.060u 0.020s 0:00.07 114.2%
       Python:   	1.360u 0.010s 0:01.56 87.8% 
       Python/psycho:	1.320u 0.070s 0:01.41 98.5%
       Perl:    	1.000u 0.020s 0:01.01 100.9%
    File line counts:
       wordUse.c	68
       wordUse.py	45
       wordUse.perl	57
