int iFlip = ~0b10101010;
long lFlip = ~2L;
int tiFlip = 0b10101010;
long tlFlip = 2L;
print(iFlip);
print(~tiFlip);
print(lFlip);
print(~tlFlip);


int iNeg = -10;
long lNeg = -11L;
double fNeg = -1.23;
print(iNeg);
print(lNeg);
print(fNeg);

bit iNot = !0;
bit lNot = !1L;
bit fNot = !1.23;

print(iNot);
print(lNot);
print(fNot);

print("!= test");
bit iNe = 10 != 9;
print(iNe);
iNe = 10 != 10;
print(iNe);
bit lNe = 10L != 9L;
print(lNe);
lNe = 10L != 10L;
print(lNe);
bit fNe = 10.0 != 9.0;
print(fNe);
fNe = 10.0 != 10.0;
print(fNe);
bit sNe = "ZZ" != "AA";
print(sNe);
sNe = "ZZ" != "ZZ";
print(sNe);

print("== test");
bit iEq = 10 == 9;
print(iEq);
iEq = 10 == 10;
print(iEq);
bit lEq = 10L == 9L;
print(lEq);
lEq = 10L == 10L;
print(lEq);
bit fEq = 10.0 == 9.0;
print(fEq);
fEq = 10.0 == 10.0;
print(fEq);
bit sEq = "ZZ" == "AA";
print(sEq);
sEq = "ZZ" == "ZZ";
print(sEq);


print("< test");
bit iLt = 10 < 9;
print(iLt);
iLt = 9 < 10;
print(iLt);
bit lLt = 10L < 9L;
print(lLt);
lLt = 9L < 10L;
print(lLt);
bit fLt = 10.0 < 9.0;
print(fLt);
fLt = 9.0 < 10.0;
print(fLt);
bit sLt = "ZZ" < "AA";
print(sLt);
sLt = "AA" < "ZZ";
print(sLt);


print("<= test");
bit iLe = 10 <= 9;
print(iLe);
iLe = 9 <= 10;
print(iLe);
bit lLe = 10L <= 9L;
print(lLe);
lLe = 9L <= 10L;
print(lLe);
bit fLe = 10.0 <= 9.0;
print(fLe);
fLe = 9.0 <= 10.0;
print(fLe);
bit sLe = "ZZ" <= "AA";
print(sLe);
sLe = "AA" <= "ZZ";
print(sLe);

print(">= test");
bit iGe = 10 >= 9;
print(iGe);
iGe = 9 >= 10;
print(iGe);
bit lGe = 10L >= 9L;
print(lGe);
lGe = 9L >= 10L;
print(lGe);
bit fGe = 10.0 >= 9.0;
print(fGe);
fGe = 9.0 >= 10.0;
print(fGe);
bit sGe = "ZZ" >= "AA";
print(sGe);
sGe = "AA" >= "ZZ";
print(sGe);

print("> test");
bit iGt = 10 > 9;
print(iGt);
iGt = 9 > 10;
print(iGt);
bit lGt = 10L > 9L;
print(lGt);
lGt = 9L > 10L;
print(lGt);
bit fGt = 10.0 > 9.0;
print(fGt);
fGt = 9.0 > 10.0;
print(fGt);
bit sGt = "ZZ" > "AA";
print(sGt);
sGt = "AA" > "ZZ";
print(sGt);

bit logOr = 1 || 0;
print(logOr);
bit logAnd = 1 && 0;
print(logAnd);
char chara = 'a';
case (chara)
   {
   'a' : chara = 'A';
   'b' : chara = 'B';
   }
bit one = 1;
bit zero = 0;
byte byte9 = 9;
short short9 = 9;
int int9 = 9;
long long9 = 9;
float float9 = 9;
double double9 = 9;
print(one);
print(zero);
print(byte9);
print(short9);
print(int9);
print(long9);
print(float9);
print(double9);

bit aone = 1L;
bit azero = 0L;
byte abyte9 = 9L;
short ashort9 = 9L;
int aint9 = 9L;
long along9 = 9L;
float afloat9 = 9L;
double adouble9 = 9L;
print(aone);
print(azero);
print(abyte9);
print(ashort9);
print(aint9);
print(along9);
print(afloat9);
print(adouble9);

bit fone = 1.1;
bit fzero = 0.1;
byte fbyte9 = 9.1;
short fshort9 = 9.1;
int fint9 = 9.1;
long flong9 = 9.1;
float ffloat9 = 9.1;
double fdouble9 = 9.1;
print(fone);
print(fzero);
print(fbyte9);
print(fshort9);
print(fint9);
print(flong9);
print(ffloat9);
print(fdouble9);


int a = 1;
int b = (1+2);
int c = (1+2)*3;
int d = (1+2)*3/2;
int e = (1+2)*3/2%3;
print(a);
print(b);
print(c);
print(d);
print(e);
string s = 'abc' + 'def' + 'ghi';
print(s);
double aa = 1.0;
double bb = (1.0+2.0);
double cc = (1.0+2.0)*3.0;
double dd = (1.0+2.0)*3.0/2.0;
print(aa);
print(bb);
print(cc);
print(dd);
long six = (3<<1);
long seven = (0b1101 ^ 0b1010);
long eight = (0b1111 & 0b1000);
long nine = (18>>1);
long fifteen = (0b1010 | 0b0101);
print(six);
print(seven);
print(eight);
print(nine);
print(fifteen);

bit nothing = "";
print(nothing);
string something = "something " + 12 + " " + 34L + " " + "0.1234";
print(something);

double mixedd = (1.0/4)*5L - 0.75 + 8;
print(mixedd);
int mixedi = (1.0/4)*5L - 0.75 + 8;
print(mixedi);


const int sixFac = 6*5*4*3*2*1;
print("sixFac " + sixFac);
const double pi = 3.1415;
const double twoPi = 2*pi;
const string http = "http:";
const string version = "1.0";
const string http1 = http+version;
print(twoPi);
print(http1);
const string httpPiVersion = http1 + " " + twoPi + " is not a circle.";
print(httpPiVersion);
